name: GitHub CI

on: push

jobs:
  gcc:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - version: 9
            os: ubuntu-22.04
          - version: 10
            os: ubuntu-24.04
          - version: 11
            os: ubuntu-24.04
          - version: 12
            os: ubuntu-24.04
          - version: 13
            os: ubuntu-24.04
          - version: 14
            os: ubuntu-24.04
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v4
      - name: Install Debian packages
        run: |
          sudo apt-get update
          sudo apt-get install -y catch cmake g++-${{ matrix.version }} git freeglut3-dev libarchive-dev libjpeg-turbo8-dev libpng-dev libunshield-dev libxml2-dev libzip-dev pkg-config zlib1g-dev
          sudo apt-get -y install unzip wget
      - name: Linting
        run: |
          export CXX=g++-${{ matrix.version }}
          export CC=gcc-${{ matrix.version }}
          cd $GITHUB_WORKSPACE
          ./ci/cpplint.sh
      - name: Build with GNU GCC ${{ matrix.version }}
        run: |
          export CXX=g++-${{ matrix.version }}
          export CC=gcc-${{ matrix.version }}
          cd $GITHUB_WORKSPACE
          mkdir build
          cd build
          cmake -DLONG_HASH_TESTS=OFF ../
          make -j2
      - name: Tests
        run: |
          cd "$GITHUB_WORKSPACE"/build
          ctest -V

  clang:
    strategy:
      fail-fast: false
      matrix:
        include:
          - version: 11
            os: ubuntu-22.04
          - version: 12
            os: ubuntu-22.04
          - version: 13
            os: ubuntu-22.04
          - version: 14
            os: ubuntu-24.04
          - version: 16
            os: ubuntu-24.04
          - version: 18
            os: ubuntu-24.04
    runs-on: ${{ matrix.os }}
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v4
      - name: Install Debian packages
        run: |
          sudo apt-get update
          sudo apt-get install -y catch cmake clang-${{ matrix.version }} git freeglut3-dev libarchive-dev libjpeg-turbo8-dev libpng-dev libunshield-dev libxml2-dev libzip-dev pkg-config zlib1g-dev
          sudo apt-get -y install unzip wget
      - name: Linting
        run: |
          export CXX=clang++-${{ matrix.version }}
          export CC=clang-${{ matrix.version }}
          cd $GITHUB_WORKSPACE
          ./ci/cpplint.sh
      - name: Build with Clang ${{ matrix.version }}
        run: |
          export CXX=clang++-${{ matrix.version }}
          export CC=clang-${{ matrix.version }}
          cd $GITHUB_WORKSPACE
          mkdir build
          cd build
          cmake -DLONG_HASH_TESTS=OFF ../
          make -j2
      - name: Tests
        run: |
          cd "$GITHUB_WORKSPACE"/build
          ctest -V

  alpine:
    runs-on: ubuntu-24.04
    container: 'alpine:3.22'
    steps:
      - name: Install and prepare Git
        run: |
          apk update && apk upgrade
          apk add git
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
      # Checks-out the repository under $GITHUB_WORKSPACE.
      - name: Git checkout
        uses: actions/checkout@v4
      - name: Install packages
        run: |
          apk update
          apk add catch2 cmake g++ freeglut-dev giflib-dev libarchive-dev libjpeg-turbo-dev libpng-dev libxml2-dev libzip-dev make pkgconf unshield-dev zlib-dev
          apk add unzip wget
      - name: Linting
        run: |
          apk add bash
          export CXX=g++
          export CC=gcc
          cd $GITHUB_WORKSPACE
          ./ci/cpplint.sh
      - name: Build
        run: |
          export CXX=g++
          export CC=gcc
          cd $GITHUB_WORKSPACE
          mkdir build
          cd build
          cmake -DLONG_HASH_TESTS=OFF ../
          make -j4
      - name: Tests
        run: |
          cd "$GITHUB_WORKSPACE"/build
          ctest -V
